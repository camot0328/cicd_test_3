name: auto deploy docker

on:
  push:
    branches:
      - main

jobs:
  build-job:
    runs-on: ubuntu-latest

    steps:
      - name: github 리파지토리 복사
        uses: actions/checkout@v4

      - name: JDK17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application 실행파일 빌드
        run: chmod +x ./gradlew && ./gradlew clean build

      - name: docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USER }}/web-app:latest .

      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: docker 이미지 푸시하기
        run: docker push ${{ secrets.DOCKER_USER }}/web-app:latest

  deploy-job:
    needs: build-job
    runs-on: ubuntu-latest

    steps:
      - name: EC2 에 접속(ssh)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: | 
#             dockerhub 에 토큰을 가지고 로그인 (private 인 경우에는 로그인 필요)
#            echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#            docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
            # 기존에 실행되던 컨테이너 중지 && 삭제
            docker stop myweb || true
            docker rm myweb || true
            # 변경된 이미지 pull
            docker pull ${{ secrets.DOCKER_USER }}/web-app:latest            
            # 새로운 컨테이너를 실행
            docker run -d -p 8080:8080 --name myweb ${{ secrets.DOCKER_USER }}/web-app:latest
          script_stop: true